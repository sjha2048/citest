<%
   select_truncate_length=120
   projects = Project.all
   info_text = "Here you can customize your subscriptions to #{t('project').pluralize}. You will be informed by email of resources that have been created or updated within the #{t('project').pluralize} that you have subscribed to, during the time period you specified. You will only be notified of items that you are authorized to view. By default, your subscription is for weekly notifications about activity in your own projects."
   project_subscriptions = @person.project_subscriptions
   project_subscriptions_with_unsubscribed = projects.map do |proj|
     project_subscriptions.detect { |ps| ps.project == proj } || ProjectSubscription.new(:project => proj, :person => @person).tap(&:mark_for_destruction)
   end
%>
<%= folding_panel("Subscriptions", false, :help_text => info_text) do %>
  <div class="row">
    <div class="col-md-6">
      You are subscribed to the following <%= t('project').pluralize %>. Click to view or edit the subcription. 
      <ul id="project_subscription_list">
        <span class="none_text" id="no_project_text" style="display: <%= project_subscriptions.empty? ? 'block' : 'none' %>">None</span>
        <% project_subscriptions.each do |ps| %>
          <li id="<%= ps.project_id %>_li">
            <%= link_to_function h(ps.project.title), "$('select_project_subscription').value = #{ps.project.id};show_project_subscription();$('select_project_subscription').value =0;return false;" %>
          </li>
        <% end %>
      </ul>
      <!-- <p class="help-block">Click to view or edit the subscription.</p> -->
      <hr/>
      <div class="form-group">
        <label>Subscribe to additional <%= t('project').pluralize %>:</label>
        <%= select_tag :select_project_subscription,
                       options_for_select([["Select #{t('project')} ...", 0]]|projects.collect { |p| [truncate(h(p.title), length: select_truncate_length), p.id] }),
                       { class: 'form-control',
                         onchange: "show_project_subscription(); return(false);"} -%>
      </div>
    </div>

    <div class="col-md-6">
      <%= f.fields_for :project_subscriptions, project_subscriptions_with_unsubscribed do |sub_form| %>
        <% project_subscription = sub_form.object %>
        <div id="subscription<%= project_subscription.project_id %>" style="display:none;">
          <%= panel "Subscription to: #{h(project_subscription.project.title)}" do %>
            <%= sub_form.hidden_field :id unless sub_form.object.new_record? %>
            <%= sub_form.hidden_field :project_id %>
            <div class="checkbox">
              <label>
                <%= sub_form.check_box :_destroy, {:checked => !sub_form.object.marked_for_destruction?,:onclick=>"updateSubscribedProjectsList(this,#{project_subscription.project_id},'#{project_subscription.project.title}');"}, 0, 1 %>
                <strong>Subscription active?</strong>
              </label>
            </div>
            <p class="help-block">
              Uncheck to disable your subscription.
            </p>

            <strong>Receive emails:</strong>
            <% Subscription::FREQUENCIES.each do |freq| %>
              <div class="radio">
                <label>
                  <%= sub_form.radio_button :frequency, freq %>
                  <%= "#{freq.capitalize}" %>
                </label>
              </div>
            <% end %>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
<% end %>

<script type="text/javascript">
    <%# MERGENOTE - whats this? and why use .invoke? (similar later on) %>
    <% project_subscriptions_with_unsubscribed.map(&:project_id).each do |proj_id| %>
      $$('#subscription<%= proj_id %> input').invoke('disable');
    <% end %>

    var project_subscription = "subscription";

    function swap_subscription(old_div_id, new_div_id) {
        var old_div = $(old_div_id);
        if (old_div && old_div.style.display == "block") {
            old_div.style.display = "none";
        }
        var new_div = $(new_div_id);
        if (new_div && new_div.style.display == "none") {
            new_div.style.display = "block";
            new_div.select('input').invoke('enable');
        }
    }

    function show_project_subscription() {
        var new_project_subscription = "subscription" + $F('select_project_subscription');
        swap_subscription(project_subscription, new_project_subscription);
        project_subscription = new_project_subscription;
    }

    function updateSubscribedProjectsList(element, project_id, project_title) {
        var child_id = project_id + '_li';
        var child = $(child_id);
        if (element.checked) {
            if (!child) {
                child = document.createElement('LI');
                child.id = child_id;
                child.onclick = function() {
                    $('select_project_subscription').value = project_id;
                    show_project_subscription();
                    $('select_project_subscription').value = 0;
                    return false;
                } ;
                var child_link = document.createElement('a');
                child_link.href = "#";
                child_link.textContent = project_title;
                child.appendChild(child_link);
                $('project_subscription_list').appendChild(child);
            }
        }else
         child.remove();

        //hide/display -None-
        if ($('project_subscription_list').getElementsByTagName('li').length > 0)
           $('no_project_text').style['display'] = 'none';
        else
           $('no_project_text').style['display'] = 'block'
    }

</script>
