
<%
   name = "#{object.class.name.underscore}[scales]"
   possibilities ||= Scale.all
   selected ||= object.scales.map(&:id)
   intro ||= "The following #{t('scale').pluralize} are associated with this #{t('model')}:"
   default_choice_text ||= "Select Item ..."
   button_text ||= "Associate with this #{t('model')}"
   value_method ||= :id
   text_method ||= :title
   html_options ||= ''
   association_step_content ||= nil


   default_choice = [default_choice_text, 0]
   collection_id = 'scale_ids'
   possibilities_collection_id = "possible_#{collection_id}"
   possibilities_options ||= {}
   possibilities_options[:onchange] = "javascript:possibilities_selection_changed();"
%>

<%= selected %>

<%= javascript_include_tag "scales/scales_selection" %>

<%= folding_panel("#{t('scale').pluralize}", false, :id => 'add_scales_form', :body_options => {:id => 'add_scales_form_fold_content'},
                  :help_text => "Here you can associate the #{t('model')} with specific #{t('scale').pluralize}") do %>
    <div class="yui-u first" <%= html_options %>>
      <p style="color: #666666;">
        <%= intro %>
      </p>

      <div id="<%= collection_id %>_display_area" class="box_editing_inner" style="line-height: 1.5;">
        <span class="none_text">Loading...</span>
      </div>
      <div class="association_step">

        <%= select_tag possibilities_collection_id,
                       options_for_select([default_choice]|possibilities.collect { |o| [truncate(h(o.send(text_method)), :length => 120), o.send(value_method)] }),
                       possibilities_options -%>
        <%# This ensures that the parameter is always sent, even when nothing is selected.
        It adds a "" as the first item in the array. So if items 1,2, and 3 are selected the
        value of the parameter will be ["","1","2","3"]. This is compatible with the rails
        association association_ids= methods, which reject 'blank' values automatically.%>
        <span id='additional_scale_details' style="display:none;" >
            Param name: <%= text_field_tag 'choose_parameter_for_scale_id' -%>
            Unit: <%= text_field_tag 'choose_unit_for_scale_id' -%>
        </span>
        <%= hidden_field_tag "#{name}[]", "" %>
        <%= select_tag "#{object.class.name.underscore}[scale_extra_params]", [],
                       { multiple: true, style: "display:none;", id: 'scale_ids_and_params' } -%>

        <%= select_tag name,
                       options_from_collection_for_select(possibilities, value_method, text_method, selected),
                       { multiple: true, style: "display:none;", id: collection_id } -%>
        <%= association_step_content -%>
      </div>

      <br/>
      <%= link_to_function(image('new') + "#{button_text}", "addSelectedToFancy2('#{collection_id}', $F('#{possibilities_collection_id}'))", :id => "add_to_#{collection_id}_link", :class => "block_link") %>


    </div>
<% end %>
<script type="text/javascript">
    Event.observe(window, 'load', function () {
        updateFancyMultiselect2('<%= collection_id %>');
    });


    <% object.scales.each do |scale| -%>
    <%
       info_list = object.fetch_additional_scale_info(scale.id)
       info_list.each do |info|
    -%>

            updateScaleAndParamsList(<%= info.to_json.html_safe -%>);
        <% end %>
    <% end -%>
</script>